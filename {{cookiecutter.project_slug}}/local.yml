version: "3"

volumes:
  {{ cookiecutter.project_slug }}_local_postgres_data: {}
  {{ cookiecutter.project_slug }}_local_postgres_data_backups: {}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: {{ cookiecutter.project_slug }}_local_django
    container_name: {{ cookiecutter.project_slug }}_local_django
    depends_on:
      - postgres
      {%- if cookiecutter.use_celery == 'y' %}
      - redis
      {%- endif %}
    volumes:
      - ./backend/:/app:z
    env_file:
      - ./.envs/.local/backend/.django
      - ./.envs/.local/backend/.postgres
    command: /start    
    ports:
      - "80:8000"
      
  postgres:
    build:
      context: .
      dockerfile: ./compose/local/postgres/Dockerfile
    image: {{ cookiecutter.project_slug }}_local_postgres
    container_name: {{ cookiecutter.project_slug }}_local_postgres
    volumes:
      - {{ cookiecutter.project_slug }}_local_postgres_data:/var/lib/postgresql/data
      - {{ cookiecutter.project_slug }}_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/backend/.postgres

  {%- if cookiecutter.use_celery == 'y' %}

  redis:
    image: redis:6
    container_name: {{ cookiecutter.project_slug }}_local_redis

  celeryworker:
    <<: *django
    image: {{ cookiecutter.project_slug }}_local_celeryworker
    container_name: {{ cookiecutter.project_slug }}_local_celeryworker
    depends_on:
      - redis
      - postgres
    command: /start-celeryworker
    ports: []

  celerybeat:
    <<: *django
    image: {{ cookiecutter.project_slug }}_local_celerybeat
    container_name: {{ cookiecutter.project_slug }}_local_celerybeat
    depends_on:
      - redis
      - postgres
    command: /start-celerybeat
    ports: []

  {%- endif %}